{
  "name": "Criterion",
  "tagline": "A KISS, non-intrusive C test framework",
  "body": "\r\n<img src=\"https://raw.githubusercontent.com/Snaipe/Criterion/bleeding/doc/criterion-title.png\" height=\"96\" alt=\"Criterion Logo\" />\r\n=========\r\n\r\n[![Unix Build Status](https://travis-ci.org/Snaipe/Criterion.svg?branch=bleeding)](https://travis-ci.org/Snaipe/Criterion) \r\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/github/Snaipe/Criterion?svg=true&branch=bleeding)](https://ci.appveyor.com/project/Snaipe/Criterion/branch/bleeding)\r\n[![Coverage Status](https://img.shields.io/codecov/c/github/Snaipe/Criterion/bleeding.svg)](https://codecov.io/github/Snaipe/Criterion?branch=bleeding) \r\n[![License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://github.com/Snaipe/Criterion/blob/master/LICENSE) \r\n[![Version](https://img.shields.io/badge/version-v2.2.1-blue.svg?style=flat)](https://github.com/Snaipe/Criterion/releases) \r\n\r\nA dead-simple, yet extensible, C and C++ unit testing framework.\r\n\r\n![Screencast](https://raw.githubusercontent.com/Snaipe/Criterion/bleeding/doc/screencast.gif)\r\n\r\n## Philosophy\r\n\r\nMost test frameworks for C require a lot of boilerplate code to\r\nset up tests and test suites -- you need to create a main,\r\nthen register new test suites, then register the tests within\r\nthese suits, and finally call the right functions.\r\n\r\nThis gives the user great control, at the unfortunate cost of simplicity.\r\n\r\nCriterion follows the KISS principle, while keeping the control\r\nthe user would have with other frameworks:\r\n\r\n* [x] C99 and C++11 compatible.\r\n* [x] Tests are automatically registered when declared.\r\n* [x] Implements a xUnit framework structure.\r\n* [x] A default entry point is provided, no need to declare a main\r\n  unless you want to do special handling.\r\n* [x] Test are isolated in their own process, crashes and signals can be\r\n  reported and tested.\r\n* [x] Unified interface between C and C++: include the criterion header and it *just* works.\r\n* [x] Supports parameterized tests and theories.\r\n* [x] Progress and statistics can be followed in real time with report hooks.\r\n* [x] TAP output format can be enabled with an option.\r\n* [x] Runs on Linux, FreeBSD, Mac OS X, and Windows (Compiling with MinGW GCC and Visual Studio 2015+).\r\n\r\n## Downloads\r\n\r\n### Packages\r\n\r\n* Mac OS X: `brew install snaipe/soft/criterion`\r\n* [AUR](https://aur.archlinux.org/packages/criterion/): `yaourt -S criterion`\r\n\r\n### Binary archives\r\n\r\nBinary releases are available [on the release page](https://github.com/Snaipe/Criterion/releases)\r\n\r\nIf you have a different platform, you can still [build the library from source](http://criterion.readthedocs.org/en/latest/setup.html#installation)\r\n\r\n## Developer Resources\r\n\r\n### Documentation\r\n\r\nAn online documentation is available on [ReadTheDocs][online-docs]\r\n([PDF][pdf-docs] | [Zip][zip-docs] | [Epub][epub-docs])\r\n\r\n### Samples\r\n\r\nSample tests can be found in the [sample directory][samples].\r\n\r\n* [A simple test][sample-simple]\r\n* [Using multiple suites][sample-suites]\r\n* [Writing assertions][sample-asserts]\r\n* [Adding test fixtures][sample-fixtures]\r\n* [Tests with signals][sample-signal]\r\n* [Using report hooks][sample-report]\r\n\r\n### Getting help\r\n\r\n| Channel | Description |\r\n| --- | --- |\r\n[![Join the chat at https://gitter.im/Snaipe/Criterion](https://badges.gitter.im/Join%20Chat.svg)][gitter-chan] | `Snaipe/Criterion` on gitter.im\r\n[![Join #criterion on freenode](https://img.shields.io/badge/irc-%23criterion-46BC99.svg)][irc-chan] | `#criterion` on irc.freenode.net\r\n\r\n### Misc\r\n\r\n* [CMake find module for Criterion][find-module]\r\n\r\n## Credits\r\n\r\nLogo made by [Paul Bouigue](http://www.cargocollective.com/pbouigue)\r\n\r\n[online-docs]: http://criterion.readthedocs.org/\r\n[pdf-docs]: http://readthedocs.org/projects/criterion/downloads/pdf/latest/\r\n[zip-docs]: http://readthedocs.org/projects/criterion/downloads/htmlzip/latest/\r\n[epub-docs]: http://readthedocs.org/projects/criterion/downloads/epub/latest/\r\n\r\n[samples]: https://github.com/Snaipe/Criterion/tree/bleeding/samples/\r\n[sample-simple]: https://github.com/Snaipe/Criterion/blob/bleeding/samples/simple.c\r\n[sample-suites]: https://github.com/Snaipe/Criterion/blob/bleeding/samples/suites.c\r\n[sample-asserts]: https://github.com/Snaipe/Criterion/blob/bleeding/samples/asserts.c\r\n[sample-fixtures]: https://github.com/Snaipe/Criterion/blob/bleeding/samples/fixtures.c\r\n[sample-signal]: https://github.com/Snaipe/Criterion/blob/bleeding/samples/signal.c\r\n[sample-report]: https://github.com/Snaipe/Criterion/blob/bleeding/samples/report.c\r\n\r\n[find-module]: https://github.com/Snaipe/Criterion/blob/bleeding/dev/FindCriterion.cmake\r\n\r\n[irc-chan]: http://webchat.freenode.net/?channels=%23criterion&uio=MTY9dHJ1ZSYyPXRydWUmOT10cnVlJjExPTE5NQ4e\r\n[gitter-chan]: https://gitter.im/Snaipe/Criterion?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}