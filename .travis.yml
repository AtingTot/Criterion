language: c

dist: trusty
sudo: false

addons:
  apt:
    sources:
    - deadsnakes
    packages:
    - ninja-build
    - python3.5
    - python3-pip

_packages:
  - &gcc49-packages
    apt:
      sources:
      - ubuntu-toolchain-r-test
      - deadsnakes
      packages:
      - g++-4.9
      - gcc-4.9
      - ninja-build
      - python3-pip
      - python3.5

_stylecheck: &stylecheck

stages:
  - stylecheck
  - build

jobs:
  include:
  - stage: stylecheck
    install: skip
    script:
    - true
    after_success:
    - echo "Style check passed."

  # Linux GCC 4.9
  - stage: build
    os: linux
    compiler: gcc-4.9
    addons: *gcc49-packages

  # Linux Debug, GCC 4.6
  - stage: build
    os: linux
    compiler: gcc

  # Linux RelWithDebInfo, GCC 4.6
  - stage: build
    os: linux
    compiler: gcc

  allow_failures:
  - stage: build
    compiler: gcc

before_install:
  - |
      mkdir -p ~/.local/bin
      test -x /usr/bin/python3.5 && ln -sf $_ ~/.local/bin/python3
      export PATH="~/.local/bin:$PATH"
      export PATH="$(python2 -m site --user-base)/bin:$PATH"
      export PATH="$(python3 -m site --user-base)/bin:$PATH"
      export LIBRARY_PATH="$HOME/.local/lib:$HOME/.local/lib64"
      export LD_LIBRARY_PATH="$LIBRARY_PATH"
      export C_INCLUDE_PATH="$HOME/.local/include"
      export CPLUS_INCLUDE_PATH="$HOME/.local/include"
      export PKG_CONFIG_PATH="$HOME/.local/lib/pkgconfig:$HOME/.local/lib64/pkgconfig"
  - |
      export CXX=${CC/gcc/g++}
      export CXX=${CXX/clang/clang++}
      $CC --version
      $CXX --version
      python3 --version

install:
  - export NINJA_LATEST=$(curl -s https://api.github.com/repos/ninja-build/ninja/releases/latest | grep browser_download_url | cut -d '"' -f 4 | grep ninja-linux.zip)
  - wget "$NINJA_LATEST"
  - unzip -q ninja-linux.zip -d "$HOME/.local/bin"
  - travis_retry python3 -m pip install --user meson==0.48
  - travis_retry python2 -m pip install --user cram==0.7
  - |
      (
        set -e
        git clone --depth=1 https://github.com/Snaipe/libcsptr
        mkdir libcsptr/build
        cd libcsptr/build
        cmake -G Ninja -DCMAKE_INSTALL_PREFIX=$HOME/.local -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
        ninja
        ninja install
      )
  - |
      (
        set -e
        git clone --depth=1 https://github.com/diacritic/boxfort
        mkdir boxfort/build
        cd boxfort/build
        cmake -G Ninja -DCMAKE_INSTALL_PREFIX=$HOME/.local -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
        ninja
        ninja install
      )
  - |
      (
        set -e
        git clone --depth=1 --branch=1.1.5 https://github.com/nanomsg/nanomsg
        mkdir nanomsg/build
        cd nanomsg/build
        TRAVIS_TAG=1.1.5 cmake -G Ninja -DCMAKE_INSTALL_PREFIX=$HOME/.local -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
        ninja
        ninja install
      )
  - |
      (
        set -e
        git clone --depth=1 https://github.com/Snaipe/dyncall
        mkdir dyncall/build
        cd dyncall/build
        cmake -G Ninja -DCMAKE_INSTALL_PREFIX=$HOME/.local -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
        ninja
        ninja install
      )
  - |
      (
        set -e
        git clone --depth=1 --branch=v0.25.1 https://github.com/libgit2/libgit2
        mkdir libgit2/build
        cd libgit2/build
        cmake -G Ninja \
            -DCMAKE_INSTALL_PREFIX=$HOME/.local \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DBUILD_SHARED_LIBS=ON \
            -DBUILD_CLAR=OFF \
            -DUSE_ICONV=OFF \
            -DUSE_SSH=OFF \
            -DUSE_GSSAPI=OFF \
            -DUSE_OPENSSL=OFF \
            -DVALGRIND=OFF \
            -DCURL=OFF \
            -DWINHTTP=OFF \
            -DCMAKE_DISABLE_FIND_PACKAGE_HTTP_Parser=TRUE \
            -DCMAKE_DISABLE_FIND_PACKAGE_ZLIB=TRUE \
            -DCMAKE_DISABLE_FIND_PACKAGE_Iconv=TRUE \
            -DCMAKE_DISABLE_FIND_PACKAGE_Security=TRUE \
          ..
        ninja
        ninja install
      )

script:
  - meson build .
  - cd build
  - ninja
  - ninja test
